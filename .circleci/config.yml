version: 2.1
orbs:
  win: circleci/windows@5.0
jobs:
  lint:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run: env/bin/cit.py -l

  build-linux-gcc-with-cit:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git submodule update --init --recursive
            source env/garnet.rc
            build.py d
            build.py p
            build.py r
            build/linux.gcc.d/bin/GNtest-unit-tests
            build/linux.gcc.p/bin/GNtest-unit-tests
            build/linux.gcc.r/bin/GNtest-unit-tests

  build-linux-clang:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            source env/garnet.rc
            build.py --clang d
            build.py --clang p
            build.py --clang r

  build-android:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            source env/garnet.rc
            build.py -a d
            build.py -a p
            build.py -a r

  build-windows:
    executor:
      name: win/server-2022
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: bootstrap
          command: |
            git config -l --global --show-origin
            get-content -path $env:USERPROFILE\.gitconfig
            git config --global --unset-all url.ssh://git@github.com/.insteadof
            get-content -path $env:USERPROFILE\.gitconfig
            git config -l --global
            git clone https://github.com/randomgraphics/vulkan-sdk.git c:\vulkan-sdk
            python.exe -m pip install --upgrade termcolor
      # - run:
      #     name: build
      #     command: |
      #       $env:VULKAN_SDK="C:\vulkan-sdk\"
      #       . env\garnet.ps1
      #       b d

workflows:
  build-and-test:
    jobs:
      # - lint
      # - build-linux-gcc-with-cit:
      #     requires:
      #       - lint
      # - build-linux-clang:
      #     requires:
      #       - lint
      # - build-android:
      #     requires:
      #       - lint
      - build-windows
          # requires:
          #   - lint
