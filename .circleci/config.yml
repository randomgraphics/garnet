version: 2.1
orbs:
  win: circleci/windows@5.0
jobs:
  lint:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: lint
          command: |
            env/bin/cit.py -l
  build-linux-gcc-debug:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            source env/garnet.rc
            build.py d
            env/bin/cit.py -t

  build-linux-gcc-profile:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            source env/garnet.rc
            build.py p
            env/bin/cit.py -t

  build-linux-gcc-release:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            git submodule update --init --recursive
            source env/garnet.rc
            build.py r
            env/bin/cit.py -t

  build-linux-clang-debug:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            source env/garnet.rc
            build.py --clang d

  build-linux-clang-profile:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            source env/garnet.rc
            build.py --clang p

  build-linux-clang-release:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            source env/garnet.rc
            build.py --clang r

  build-android-debug:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            source env/garnet.rc
            build.py -a d

  build-android-profile:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            source env/garnet.rc
            build.py -a p

  build-android-release:
    docker:
      - image: randomgraphics/garnet:latest
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: build
          command: |
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            source env/garnet.rc
            build.py -a r

  build-windows:
    executor:
      name: win/server-2022
    steps:
      - run:
          name: prep git
          command: |
            git config --global --add safe.directory /tmp/_circleci_local_build_repo
            git config --global --add safe.directory /root/project
      - checkout
      - run:
          name: bootstrap
          command: |
            # install vulkan sdk
            "Installing Vulkan SDK..."
            git config --global --unset-all "url.ssh://git@github.com.insteadof" # fix git lfs bad credential when fetching repo stored on github
            git clone https://github.com/randomgraphics/vulkan-sdk.git c:\vulkan-sdk

            # install cmake
            "Installing CMake..."
            Invoke-WebRequest https://github.com/Kitware/CMake/releases/download/v3.28.1/cmake-3.28.1-windows-x86_64.zip -OutFile c:\cmake.zip
            Expand-Archive c:\cmake.zip c:\

            # TODO: install Qt6

            # install misc. dependencies
            "Installing misc. dependencies..."
            python.exe -m pip install --upgrade termcolor
      - run:
          name: build debug
          command: |
            $env:VULKAN_SDK="C:\vulkan-sdk\"
            $env:PATH="C:\cmake-3.28.1-windows-x86_64\bin;$env:PATH"
            . env\garnet.ps1
            b d
      - run:
          name: build profile
          command: |
            $env:VULKAN_SDK="C:\vulkan-sdk\"
            $env:PATH="C:\cmake-3.28.1-windows-x86_64\bin;$env:PATH"
            . env\garnet.ps1
            b p

      - run:
          name: build release
          command: |
            $env:VULKAN_SDK="C:\vulkan-sdk\"
            $env:PATH="C:\cmake-3.28.1-windows-x86_64\bin;$env:PATH"
            . env\garnet.ps1
            b r

workflows:
  build-and-test:
    jobs:
      - lint
      - build-linux-gcc-debug:
        - requires:
          - lint
      - build-linux-gcc-profile:
          requires:
            - build-linux-gcc-debug
      - build-linux-gcc-release:
          requires:
            - build-linux-gcc-debug
      - build-linux-clang-debug:
          requires:
            - build-linux-gcc-debug
      - build-linux-clang-profile:
          requires:
            - build-linux-clang-debug
      - build-linux-clang-release:
          requires:
            - build-linux-clang-debug
      - build-android-debug:
          requires:
            - build-linux-gcc-debug
      - build-android-profile:
          requires:
            - build-android-debug
      - build-android-release:
          requires:
            - build-android-debug
      - build-windows:
        - requires:
          - lint
